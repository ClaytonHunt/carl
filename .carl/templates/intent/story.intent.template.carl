# {STORY_NAME} - User Story Definition
# Generated by CARL v{CARL_VERSION} on {CREATION_DATE}
# Type: Story
# Scope: {STORY_SCOPE}

id: "{STORY_ID}"
type: "story"
parent_id: "{PARENT_FEATURE_ID}"
complexity: "{DETECTED_COMPLEXITY}"
priority: "{ASSIGNED_PRIORITY}"
estimated_duration: "{TIME_ESTIMATE}"
created_date: "{CREATION_DATE}"
status: "draft"

intent_definition:
  what: "{WHAT_DESCRIPTION}"
  why: "{WHY_JUSTIFICATION}"
  who: {WHO_STAKEHOLDERS}
  when: "{WHEN_CONSTRAINTS}"
  constraints: {IDENTIFIED_CONSTRAINTS}

scope_definition:
  in_scope: {IN_SCOPE_ITEMS}
  out_of_scope: {OUT_OF_SCOPE_ITEMS}
  assumptions: {PROJECT_ASSUMPTIONS}
  dependencies: {EXTERNAL_DEPENDENCIES}

user_story:
  narrative: "As a {USER_ROLE}, I want to {USER_GOAL} so that {USER_BENEFIT}"
  acceptance_criteria: {ACCEPTANCE_CRITERIA}
  definition_of_done: {DEFINITION_OF_DONE}

implementation_details:
  test_scenarios: {TEST_SCENARIOS}
  edge_cases: {EDGE_CASES}
  error_scenarios: {ERROR_SCENARIOS}

technical_approach:
  implementation_strategy: "{HIGH_LEVEL_APPROACH}"
  affected_components: {FILES_AND_MODULES}
  api_changes: {API_MODIFICATIONS}
  database_changes: {DATABASE_MODIFICATIONS}
  
ui_changes:
  components_affected: {UI_COMPONENTS}
  user_interactions: {USER_INTERACTIONS}
  visual_changes: {VISUAL_CHANGES}
  
validation_requirements:
  input_validation: {INPUT_VALIDATION}
  business_rules: {BUSINESS_RULES}
  security_checks: {SECURITY_CHECKS}

testing_requirements:
  unit_tests: {UNIT_TEST_SCENARIOS}
  integration_tests: {INTEGRATION_TEST_SCENARIOS}
  e2e_tests: {E2E_TEST_SCENARIOS}

risk_assessment:
  technical_risks: {TECHNICAL_RISKS}
  implementation_risks: {IMPLEMENTATION_RISKS}
  mitigation_approach: {MITIGATION_APPROACH}

progress_tracking:
  completion_percentage: 0
  subtasks: {IMPLEMENTATION_SUBTASKS}
  blockers: []
  
relationships:
  parent_relationships: ["{PARENT_FEATURE_ID}"]
  child_relationships: []
  cross_references: {RELATED_STORIES}
  blocks: {STORIES_THIS_BLOCKS}
  blocked_by: {STORIES_BLOCKING_THIS}

# Template Variables:
# {STORY_NAME} - AI-optimized identifier for the story
# {CARL_VERSION} - Current CARL version
# {CREATION_DATE} - ISO timestamp of generation
# {STORY_SCOPE} - Brief story scope description
# {STORY_ID} - Unique snake_case identifier (e.g., "remember_me_checkbox")
# {PARENT_FEATURE_ID} - Reference to parent feature
# {DETECTED_COMPLEXITY} - low|medium|high based on analysis
# {ASSIGNED_PRIORITY} - P0|P1|P2|P3 based on feature priority
# {TIME_ESTIMATE} - Estimated duration (e.g., "2-3 days, high confidence")
# {WHAT_DESCRIPTION} - Clear statement of what functionality is needed
# {WHY_JUSTIFICATION} - User value and business justification
# {WHO_STAKEHOLDERS} - Primary user persona for this story
# {WHEN_CONSTRAINTS} - Sprint/iteration constraints
# {IDENTIFIED_CONSTRAINTS} - Technical constraints for implementation
# {IN_SCOPE_ITEMS} - Specific functionality included
# {OUT_OF_SCOPE_ITEMS} - What's explicitly not included
# {PROJECT_ASSUMPTIONS} - Assumptions about existing functionality
# {EXTERNAL_DEPENDENCIES} - Dependencies on other stories/features
# {USER_ROLE} - Primary user role (e.g., "registered user")
# {USER_GOAL} - What the user wants to accomplish
# {USER_BENEFIT} - Why the user wants this
# {ACCEPTANCE_CRITERIA} - Testable acceptance criteria
# {DEFINITION_OF_DONE} - Checklist for story completion
# {TEST_SCENARIOS} - Happy path test scenarios
# {EDGE_CASES} - Edge case scenarios to handle
# {ERROR_SCENARIOS} - Error conditions to handle
# {HIGH_LEVEL_APPROACH} - Implementation approach
# {FILES_AND_MODULES} - Files that will be modified
# {API_MODIFICATIONS} - API endpoints to add/modify
# {DATABASE_MODIFICATIONS} - Database schema changes
# {UI_COMPONENTS} - UI components to create/modify
# {USER_INTERACTIONS} - User interaction patterns
# {VISUAL_CHANGES} - Visual design changes
# {INPUT_VALIDATION} - Input validation rules
# {BUSINESS_RULES} - Business logic validation
# {SECURITY_CHECKS} - Security validations
# {UNIT_TEST_SCENARIOS} - Unit test requirements
# {INTEGRATION_TEST_SCENARIOS} - Integration test requirements
# {E2E_TEST_SCENARIOS} - End-to-end test requirements
# {TECHNICAL_RISKS} - Technical implementation risks
# {IMPLEMENTATION_RISKS} - Other implementation risks
# {MITIGATION_APPROACH} - How to mitigate risks
# {IMPLEMENTATION_SUBTASKS} - Breakdown of implementation tasks
# {RELATED_STORIES} - Related user stories
# {STORIES_THIS_BLOCKS} - Stories that depend on this
# {STORIES_BLOCKING_THIS} - Stories this depends on