# {TECHNICAL_NAME} - Technical Initiative Definition
# Generated by CARL v{CARL_VERSION} on {CREATION_DATE}
# Type: Technical Initiative
# Scope: {TECHNICAL_SCOPE}

id: "{TECHNICAL_ID}"
type: "technical_initiative"
parent_id: "{PARENT_ID}"
complexity: "{DETECTED_COMPLEXITY}"
priority: "{ASSIGNED_PRIORITY}"
estimated_duration: "{TIME_ESTIMATE}"
created_date: "{CREATION_DATE}"
status: "draft"

intent_definition:
  what: "{WHAT_DESCRIPTION}"
  why: "{WHY_JUSTIFICATION}"
  who: {WHO_STAKEHOLDERS}
  when: "{WHEN_CONSTRAINTS}"
  constraints: {IDENTIFIED_CONSTRAINTS}

scope_definition:
  in_scope: {IN_SCOPE_ITEMS}
  out_of_scope: {OUT_OF_SCOPE_ITEMS}
  assumptions: {PROJECT_ASSUMPTIONS}
  dependencies: {EXTERNAL_DEPENDENCIES}

technical_objectives:
  debt_reduction: {TECHNICAL_DEBT_ITEMS}
  performance_improvements: {PERFORMANCE_GOALS}
  architectural_improvements: {STRUCTURAL_CHANGES}
  maintainability_gains: {CODE_QUALITY_IMPROVEMENTS}
  security_enhancements: {SECURITY_IMPROVEMENTS}

current_state_analysis:
  problem_statement: "{PROBLEM_STATEMENT}"
  pain_points: {CURRENT_PAIN_POINTS}
  technical_debt_assessment: {DEBT_ASSESSMENT}
  performance_baseline: {CURRENT_PERFORMANCE}
  
target_state_definition:
  desired_architecture: "{TARGET_ARCHITECTURE}"
  quality_targets: {QUALITY_TARGETS}
  performance_targets: {PERFORMANCE_TARGETS}
  maintainability_metrics: {MAINTAINABILITY_METRICS}

refactoring_plan:
  approach: "{REFACTORING_APPROACH}"
  phases: {REFACTORING_PHASES}
  migration_strategy: "{MIGRATION_STRATEGY}"
  rollback_plan: "{ROLLBACK_PLAN}"

implementation_details:
  affected_systems: {AFFECTED_SYSTEMS}
  code_changes: {CODE_CHANGE_CATEGORIES}
  testing_strategy: {TESTING_APPROACH}
  deployment_strategy: {DEPLOYMENT_APPROACH}

risk_assessment:
  technical_risks: {TECHNICAL_RISKS}
  business_risks: {BUSINESS_RISKS}
  mitigation_strategies: {MITIGATION_STRATEGIES}
  
success_criteria:
  technical_metrics: {TECHNICAL_SUCCESS_METRICS}
  business_metrics: {BUSINESS_SUCCESS_METRICS}
  quality_gates: {QUALITY_GATES}

progress_tracking:
  completion_percentage: 0
  milestones: {DEFINED_MILESTONES}
  blockers: []
  
relationships:
  parent_relationships: {PARENT_REFS}
  child_relationships: []
  cross_references: {RELATED_INITIATIVES}
  enables: {FEATURES_THIS_ENABLES}

# Template Variables:
# {TECHNICAL_NAME} - AI-optimized identifier for the initiative
# {CARL_VERSION} - Current CARL version
# {CREATION_DATE} - ISO timestamp of generation
# {TECHNICAL_SCOPE} - Scope of technical changes
# {TECHNICAL_ID} - Unique snake_case identifier (e.g., "api_refactor")
# {PARENT_ID} - Parent epic or feature if applicable
# {DETECTED_COMPLEXITY} - low|medium|high|epic based on scope
# {ASSIGNED_PRIORITY} - P0|P1|P2|P3 based on impact
# {TIME_ESTIMATE} - Estimated duration (e.g., "1-2 sprints, medium confidence")
# {WHAT_DESCRIPTION} - Clear statement of technical changes
# {WHY_JUSTIFICATION} - Technical and business justification
# {WHO_STAKEHOLDERS} - Development team and affected users
# {WHEN_CONSTRAINTS} - Timeline constraints
# {IDENTIFIED_CONSTRAINTS} - Technical constraints
# {IN_SCOPE_ITEMS} - Specific changes included
# {OUT_OF_SCOPE_ITEMS} - What's explicitly excluded
# {PROJECT_ASSUMPTIONS} - Technical assumptions
# {EXTERNAL_DEPENDENCIES} - External system dependencies
# {TECHNICAL_DEBT_ITEMS} - Specific debt to address
# {PERFORMANCE_GOALS} - Performance improvements
# {STRUCTURAL_CHANGES} - Architectural changes
# {CODE_QUALITY_IMPROVEMENTS} - Quality improvements
# {SECURITY_IMPROVEMENTS} - Security enhancements
# {PROBLEM_STATEMENT} - Current problem description
# {CURRENT_PAIN_POINTS} - List of current issues
# {DEBT_ASSESSMENT} - Technical debt analysis
# {CURRENT_PERFORMANCE} - Current performance metrics
# {TARGET_ARCHITECTURE} - Desired architecture
# {QUALITY_TARGETS} - Target quality metrics
# {PERFORMANCE_TARGETS} - Target performance metrics
# {MAINTAINABILITY_METRICS} - Maintainability goals
# {REFACTORING_APPROACH} - Overall approach
# {REFACTORING_PHASES} - Phased implementation
# {MIGRATION_STRATEGY} - Data/code migration approach
# {ROLLBACK_PLAN} - How to rollback if needed
# {AFFECTED_SYSTEMS} - Systems/services affected
# {CODE_CHANGE_CATEGORIES} - Types of code changes
# {TESTING_APPROACH} - Testing strategy
# {DEPLOYMENT_APPROACH} - Deployment strategy
# {TECHNICAL_RISKS} - Technical risk factors
# {BUSINESS_RISKS} - Business impact risks
# {MITIGATION_STRATEGIES} - Risk mitigation plans
# {TECHNICAL_SUCCESS_METRICS} - Technical success measures
# {BUSINESS_SUCCESS_METRICS} - Business success measures
# {QUALITY_GATES} - Quality checkpoints
# {DEFINED_MILESTONES} - Implementation milestones
# {PARENT_REFS} - Parent relationships
# {RELATED_INITIATIVES} - Related technical work
# {FEATURES_THIS_ENABLES} - Features enabled by this work