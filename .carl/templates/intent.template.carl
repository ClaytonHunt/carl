# {REQUIREMENT_NAME} - Requirements Definition
# Generated by CARL v{CARL_VERSION} on {CREATION_DATE}
# Type: {REQUIREMENT_TYPE}
# Scope: {REQUIREMENT_SCOPE}

id: "{REQUIREMENT_ID}"
type: "{REQUIREMENT_TYPE}"
parent_id: "{PARENT_REQUIREMENT_ID}"
complexity: "{DETECTED_COMPLEXITY}"
priority: "{ASSIGNED_PRIORITY}"
estimated_duration: "{TIME_ESTIMATE}"
created_date: "{CREATION_DATE}"
status: "draft"

intent_definition:
  what: "{WHAT_DESCRIPTION}"
  why: "{WHY_JUSTIFICATION}"
  who: {WHO_STAKEHOLDERS}
  when: "{WHEN_CONSTRAINTS}"
  constraints: {IDENTIFIED_CONSTRAINTS}

scope_definition:
  in_scope: {IN_SCOPE_ITEMS}
  out_of_scope: {OUT_OF_SCOPE_ITEMS}
  assumptions: {PROJECT_ASSUMPTIONS}
  dependencies: {EXTERNAL_DEPENDENCIES}

# Scope-specific sections based on requirement type
{SCOPE_SPECIFIC_CONTENT}

progress_tracking:
  completion_percentage: 0
  milestones: {DEFINED_MILESTONES}
  blockers: []

relationships:
  parent_relationships: {PARENT_REFS}
  child_relationships: {CHILD_REFS}
  cross_references: {RELATED_REQUIREMENTS}

# Template Variables:
# {REQUIREMENT_NAME} - AI-optimized identifier for the requirement
# {CARL_VERSION} - Current CARL version
# {CREATION_DATE} - ISO timestamp of generation
# {REQUIREMENT_TYPE} - epic|feature|story|technical_initiative
# {REQUIREMENT_SCOPE} - Brief scope description
# {REQUIREMENT_ID} - Unique snake_case identifier
# {PARENT_REQUIREMENT_ID} - ID of parent requirement if applicable
# {DETECTED_COMPLEXITY} - low|medium|high|epic based on analysis
# {ASSIGNED_PRIORITY} - P0|P1|P2|P3 based on user input or analysis
# {TIME_ESTIMATE} - Estimated duration with confidence level
# {WHAT_DESCRIPTION} - Clear statement of what needs to be built
# {WHY_JUSTIFICATION} - Business justification and value proposition
# {WHO_STAKEHOLDERS} - Array of stakeholders and user types
# {WHEN_CONSTRAINTS} - Timeline constraints and dependencies
# {IDENTIFIED_CONSTRAINTS} - Technical, business, and resource limitations
# {IN_SCOPE_ITEMS} - Array of included functionality
# {OUT_OF_SCOPE_ITEMS} - Array of explicitly excluded functionality
# {PROJECT_ASSUMPTIONS} - Array of assumptions made during planning
# {EXTERNAL_DEPENDENCIES} - Array of external dependencies and blockers
# {SCOPE_SPECIFIC_CONTENT} - Content specific to epic/feature/story/technical
# {DEFINED_MILESTONES} - Array of milestones with target dates
# {PARENT_REFS} - References to parent requirements
# {CHILD_REFS} - References to child requirements
# {RELATED_REQUIREMENTS} - References to related requirements

# Scope-Specific Content Templates:

# EPIC_LEVEL_CONTENT:
# epic_breakdown:
#   features: {CHILD_FEATURES}
#   architectural_requirements: {SYSTEM_REQUIREMENTS}
#   success_metrics: {BUSINESS_KPI}
#   rollout_strategy: {DEPLOYMENT_PLAN}

# FEATURE_LEVEL_CONTENT:
# user_stories:
#   core_stories: {ESSENTIAL_STORIES}
#   edge_case_stories: {EDGE_CASES}
#   acceptance_criteria: {DETAILED_ACCEPTANCE}
# technical_requirements:
#   api_endpoints: {REQUIRED_APIS}
#   data_requirements: {DATA_NEEDS}
#   security_requirements: {SECURITY_CONSIDERATIONS}
#   performance_requirements: {PERFORMANCE_NEEDS}

# STORY_LEVEL_CONTENT:
# implementation_details:
#   acceptance_criteria: {TESTABLE_REQUIREMENTS}
#   definition_of_done: {COMPLETION_CHECKLIST}
#   test_scenarios: {TEST_CASES}
# technical_approach:
#   implementation_strategy: {HIGH_LEVEL_APPROACH}
#   affected_components: {FILES_AND_MODULES}
#   risk_assessment: {POTENTIAL_ISSUES}

# TECHNICAL_INITIATIVE_CONTENT:
# technical_objectives:
#   debt_reduction: {TECHNICAL_DEBT_ITEMS}
#   performance_improvements: {PERFORMANCE_GOALS}
#   architectural_improvements: {STRUCTURAL_CHANGES}
#   maintainability_gains: {CODE_QUALITY_IMPROVEMENTS}
# refactoring_plan:
#   current_state_analysis: {EXISTING_IMPLEMENTATION_ASSESSMENT}
#   target_state_definition: {DESIRED_END_STATE}
#   migration_strategy: {TRANSFORMATION_PLAN}