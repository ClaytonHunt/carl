# CARL Project Vision Format Specification
# Version: 1.0
# Purpose: Define the structure for project vision alignment files (.carl/project/vision.carl)

file_extension: ".carl"
file_path: ".carl/project/vision.carl"
encoding: "UTF-8"
format: "YAML"

structure:
  header:
    required: true
    description: "Comment header with project identification and purpose"
    format: |
      # {Project Name} Project Vision
      # Generated by CARL v{version} on {timestamp}
      # Strategic alignment framework for feature validation

  vision_metadata:
    required: true
    description: "Basic vision document identification and versioning"
    fields:
      vision_id:
        type: "string"
        format: "kebab-case"
        description: "Unique identifier for this project vision"
      project_name:
        type: "string"
        description: "AI-optimized project name"
      version:
        type: "string"
        format: "semantic_version"
        description: "Vision document version (semantic versioning)"
      last_updated:
        type: "timestamp"
        format: "ISO 8601"
        description: "When this vision was last updated"
      status:
        type: "string"
        enum: ["draft", "active", "evolving", "stable", "deprecated"]
        description: "Current status of this vision document"
      alignment_validation_enabled:
        type: "boolean"
        description: "Whether automatic alignment validation is enabled"

  core_vision:
    required: true
    description: "Fundamental project vision components"
    fields:
      mission_statement:
        type: "string"
        max_length: 200
        description: "One sentence defining the project's core purpose"
      value_proposition:
        type: "string"
        max_length: 500
        description: "Why this project matters and what unique value it provides"
      target_impact:
        type: "string"
        max_length: 300
        description: "Measurable change this project creates in the world"
      success_definition:
        type: "string"
        max_length: 300
        description: "What success looks like for this project"
      strategic_objectives:
        type: "array"
        min_items: 3
        max_items: 10
        description: "Key strategic objectives that define project success"
        item_format: "string"

  alignment_criteria:
    required: true
    description: "Specific criteria for validating feature alignment"
    sections:
      user_value_alignment:
        required: true
        description: "Criteria for user value alignment"
        fields:
          primary_user_needs:
            type: "array"
            description: "Core user needs this project addresses"
            examples: ["efficient_development_workflow", "ai_context_optimization", "cross_platform_compatibility"]
          excluded_user_types:
            type: "array"
            description: "User types explicitly out of scope"
            examples: ["enterprise_teams_without_ai_tools", "non_technical_users"]
          value_measurement_methods:
            type: "array"
            description: "How user value is measured and validated"
            examples: ["development_velocity_metrics", "user_satisfaction_surveys", "feature_adoption_rates"]
          
      business_alignment:
        required: true
        description: "Business value and strategic alignment criteria"
        fields:
          revenue_impact_requirements:
            type: "string"
            description: "How features should impact revenue or cost reduction"
          market_positioning_requirements:
            type: "string"
            description: "How features should support competitive positioning"
          brand_consistency_requirements:
            type: "string"
            description: "Brand values and consistency requirements"
          
      technical_alignment:
        required: true
        description: "Technical consistency and architectural alignment"
        fields:
          architectural_consistency:
            type: "string"
            description: "Core architectural principles that must be maintained"
          quality_standards:
            type: "array"
            description: "Non-negotiable quality requirements"
            examples: ["cross_platform_compatibility", "sub_second_response_times", "bash_script_simplicity"]
          scalability_constraints:
            type: "array"
            description: "Growth and performance boundaries"
            examples: ["support_1000_plus_projects", "handle_concurrent_users", "maintain_low_resource_usage"]

  pivot_detection_rules:
    required: true
    description: "Rules for detecting strategic pivots vs feature misalignment"
    fields:
      major_pivot_indicators:
        type: "array"
        description: "Changes that indicate a major strategic pivot"
        examples: 
          - "fundamental_mission_change"
          - "target_user_demographic_shift"
          - "business_model_transformation"
          - "core_technology_platform_migration"
      
      alignment_flexibility_ranges:
        type: "object"
        description: "Acceptable ranges for feature expansion without pivot"
        fields:
          user_scope_expansion:
            type: "integer"
            range: "0-100"
            description: "Acceptable percentage increase in user base scope"
          feature_scope_expansion:
            type: "integer"
            range: "0-100"
            description: "Acceptable percentage increase in feature complexity"
          timeline_flexibility:
            type: "integer"
            range: "0-100"
            description: "Acceptable timeline deviation percentage"
          resource_overhead_tolerance:
            type: "integer"
            range: "0-50"
            description: "Acceptable resource overhead percentage for new features"

  alignment_scoring:
    required: true
    description: "Configuration for alignment scoring algorithm"
    fields:
      scoring_weights:
        type: "object"
        description: "Relative weights for different alignment dimensions"
        fields:
          user_value_alignment:
            type: "integer"
            range: "0-100"
            default: 30
            description: "Weight percentage for user value alignment"
          business_value_alignment:
            type: "integer"
            range: "0-100"
            default: 25
            description: "Weight percentage for business alignment"
          technical_consistency:
            type: "integer"
            range: "0-100"
            default: 20
            description: "Weight percentage for technical consistency"
          strategic_objective_support:
            type: "integer"
            range: "0-100"
            default: 15
            description: "Weight percentage for strategic objective support"
          resource_efficiency:
            type: "integer"
            range: "0-100"
            default: 10
            description: "Weight percentage for resource efficiency"
      
      score_thresholds:
        type: "object"
        description: "Score thresholds for different validation outcomes"
        fields:
          auto_approve:
            type: "integer"
            range: "70-100"
            default: 80
            description: "Minimum score for automatic approval"
          requires_review:
            type: "object"
            fields:
              min: { type: "integer", default: 60 }
              max: { type: "integer", default: 79 }
            description: "Score range requiring manual review"
          requires_justification:
            type: "object"
            fields:
              min: { type: "integer", default: 40 }
              max: { type: "integer", default: 59 }
            description: "Score range requiring justification"
          auto_reject:
            type: "integer"
            range: "0-39"
            description: "Maximum score for automatic rejection"

  feedback_templates:
    required: false
    description: "Templates for generating alignment feedback"
    fields:
      strong_alignment:
        type: "string"
        description: "Template for features with strong alignment (80-100)"
        default: "‚úÖ Strong alignment with project vision. This feature directly supports: {aligned_objectives}"
      
      moderate_alignment:
        type: "string"
        description: "Template for features with moderate alignment (60-79)"
        default: "‚ö†Ô∏è Moderate alignment. Consider enhancing: {improvement_areas}"
      
      weak_alignment:
        type: "string"
        description: "Template for features with weak alignment (40-59)"
        default: "üîÑ Weak alignment detected. Recommend: {alignment_suggestions}"
      
      misalignment:
        type: "string"
        description: "Template for misaligned features (0-39)"
        default: "‚ùå Misalignment with core vision. This conflicts with: {conflict_areas}"
      
      pivot_detection:
        type: "string"
        description: "Template for detected pivots"
        default: "üîÑ Strategic pivot detected in: {pivot_areas}. Vision review recommended."

validation_rules:
  scoring_weights_sum_100:
    description: "All scoring weights must sum to 100"
    rule: "sum(scoring_weights.*) == 100"
  
  threshold_consistency:
    description: "Score thresholds must be in ascending order"
    rule: "auto_reject < requires_justification.min < requires_review.min < auto_approve"
  
  strategic_objectives_minimum:
    description: "Must have at least 3 strategic objectives"
    rule: "len(strategic_objectives) >= 3"
  
  alignment_criteria_completeness:
    description: "All alignment criteria sections must be populated"
    rule: "user_value_alignment AND business_alignment AND technical_alignment are not empty"
  
  flexibility_ranges_valid:
    description: "Flexibility ranges must be realistic percentages"
    rule: "all flexibility ranges >= 0 AND <= 100"

usage_examples:
  minimal_structure: |
    vision_metadata:
      vision_id: "project-name-vision"
      project_name: "Example Project"
      version: "1.0.0"
      status: "active"
      alignment_validation_enabled: true
    
    core_vision:
      mission_statement: "Solve specific problem for target users efficiently"
      value_proposition: "Unique value delivered to users"
      strategic_objectives:
        - "objective_1"
        - "objective_2"
        - "objective_3"
    
    alignment_criteria:
      user_value_alignment:
        primary_user_needs: ["need_1", "need_2"]
      business_alignment:
        revenue_impact_requirements: "cost_reduction_through_efficiency"
      technical_alignment:
        architectural_consistency: "maintain_system_architecture"
    
    pivot_detection_rules:
      major_pivot_indicators:
        - "fundamental_mission_change"
      alignment_flexibility_ranges:
        user_scope_expansion: 20
        feature_scope_expansion: 30
    
    alignment_scoring:
      scoring_weights:
        user_value_alignment: 30
        business_value_alignment: 25
        technical_consistency: 20
        strategic_objective_support: 15
        resource_efficiency: 10

best_practices:
  vision_creation:
    - "Start with clear, measurable mission statement"
    - "Define specific, actionable strategic objectives"
    - "Set realistic alignment flexibility ranges"
    - "Use concrete examples in alignment criteria"
  
  alignment_criteria_definition:
    - "Make criteria specific and measurable"
    - "Include both positive criteria (what aligns) and negative criteria (what doesn't)"
    - "Consider technical, business, and user dimensions equally"
    - "Regular review and update as project evolves"
  
  scoring_configuration:
    - "Adjust weights based on project priorities"
    - "Set thresholds based on team decision-making preferences"
    - "Test scoring with historical features to validate"
    - "Document rationale for weight and threshold choices"

integration_points:
  carl_plan:
    description: "Automatic alignment validation during feature planning"
    access_pattern: "Read vision for validation, log alignment scores"
  
  carl_task:
    description: "Alignment-aware task prioritization"
    access_pattern: "Read for prioritizing work by alignment scores"
  
  carl_analyze:
    description: "Vision consistency validation and updates"
    access_pattern: "Read for analysis, write for vision updates"
  
  alignment_engine:
    description: "Core validation engine processes"
    access_pattern: "Read for scoring, write alignment results"