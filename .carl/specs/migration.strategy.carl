# CARL Architecture Migration Strategy
# Version: 1.0
# Purpose: Safe migration from current CARL structure to new [name].[type].carl architecture

migration_overview:
  breaking_changes: true
  backward_compatibility: "transition_period_with_legacy_support"
  data_preservation: "all_existing_user_content_preserved"
  rollback_strategy: "complete_rollback_to_previous_version_possible"

critical_issues_addressed:
  session_pollution:
    problem: "index.carl growing with duplicate session data"
    solution: "separate session tracking to dedicated files"
    impact: "prevents context window overflow"
    
  file_structure_inconsistency:
    problem: "mixed .carl and .md extensions without clear purpose"
    solution: "standardize on [name].[type].carl naming convention"
    impact: "clear artifact hierarchy and AI optimization"
    
  missing_process_definition:
    problem: "no process.carl for development workflow context"
    solution: "create process.carl as core project artifact"
    impact: "consistent development context for AI"

migration_phases:
  phase_1_critical_fixes:
    version_requirement: "1.4.1"
    description: "Critical bug fixes and preparation"
    risk_level: "low"
    actions:
      - "create_comprehensive_backup_of_all_carl_files"
      - "fix_index_carl_session_pollution_immediately"
      - "implement_session_rotation_system"
      - "update_hooks_to_use_separate_session_files"
      - "analyze_existing_project_structure_for_migration_planning"
    rollback_point: "simple_file_restoration_from_backup"
    success_criteria: ["index_carl_stops_growing", "sessions_properly_separated", "all_existing_functionality_preserved"]
    
  phase_2_architecture_preparation:
    version_requirement: "1.5.0-beta"
    description: "Prepare new directory structure and format specifications"
    risk_level: "medium"
    actions:
      - "create_new_carl_directory_structure"
      - "install_all_format_specifications_and_templates"
      - "validate_migration_compatibility_with_existing_content"
      - "generate_migration_mapping_for_project_specific_content"
    rollback_point: "remove_new_directories_keep_existing_structure"
    success_criteria: ["new_structure_created", "all_templates_available", "migration_plan_validated"]
    
  phase_3_strategic_artifacts_migration:
    version_requirement: "1.5.0-beta"
    description: "Create strategic layer from existing content"
    risk_level: "medium"
    actions:
      - "extract_vision_elements_from_existing_mission_carl"
      - "convert_roadmap_carl_to_strategic_roadmap_format"
      - "generate_objectives_from_existing_success_criteria"
      - "create_strategy_directory_and_populate_with_converted_content"
      - "validate_strategic_alignment_across_all_artifacts"
    rollback_point: "restore_original_mission_and_roadmap_files"
    success_criteria: ["vision_strategy_carl_created", "roadmap_strategy_carl_populated", "objectives_strategy_carl_defined"]
    
  phase_4_requirements_restructure:
    version_requirement: "1.5.0-beta"
    description: "Migrate requirements to new structure"
    risk_level: "high"
    actions:
      - "create_requirements_active_and_completed_directories"
      - "convert_existing_specifications_to_intent_carl_format"
      - "extract_epics_features_stories_from_existing_documentation"
      - "establish_parent_child_relationships_between_requirements"
      - "generate_process_carl_from_codebase_analysis_and_existing_practices"
    rollback_point: "restore_original_specifications_directory"
    success_criteria: ["all_requirements_converted", "relationships_established", "process_carl_generated"]
    
  phase_5_implementation_tracking:
    version_requirement: "1.5.0-beta"
    description: "Set up implementation progress tracking"
    risk_level: "medium"
    actions:
      - "create_implementation_active_and_completed_directories"
      - "generate_state_carl_files_for_all_active_requirements"
      - "analyze_codebase_to_populate_initial_progress_data"
      - "establish_automated_progress_tracking_hooks"
    rollback_point: "remove_implementation_directories_rely_on_manual_tracking"
    success_criteria: ["state_files_created", "progress_data_populated", "automated_tracking_active"]
    
  phase_6_architecture_context:
    version_requirement: "1.5.0-beta"
    description: "Generate architectural context files"
    risk_level: "low"
    actions:
      - "create_architecture_active_and_completed_directories"
      - "analyze_codebase_for_component_relationships"
      - "generate_context_carl_files_for_major_system_components"
      - "map_architectural_dependencies_and_integrations"
    rollback_point: "remove_architecture_directories_rely_on_manual_documentation"
    success_criteria: ["context_files_generated", "relationships_mapped", "architectural_overview_complete"]
    
  phase_7_command_integration:
    version_requirement: "1.5.0"
    description: "Update all CARL commands to use new architecture"
    risk_level: "high"
    actions:
      - "update_carl_analyze_to_generate_new_structure"
      - "update_carl_plan_to_create_proper_intent_files_in_requirements_directory"
      - "update_carl_status_to_read_from_all_new_artifact_types"
      - "update_carl_task_to_update_state_files_automatically"
      - "update_carl_settings_to_configure_new_architecture_options"
      - "update_all_hooks_to_maintain_new_file_structure"
    rollback_point: "revert_to_1_4_x_command_versions"
    success_criteria: ["all_commands_work_with_new_structure", "hooks_maintain_files_correctly", "user_workflow_unchanged"]
    
  phase_8_index_optimization:
    version_requirement: "1.5.0"
    description: "Optimize index.carl for new architecture"
    risk_level: "low"
    actions:
      - "rebuild_index_carl_using_new_template"
      - "establish_reference_only_approach_with_external_file_links"
      - "implement_intelligent_context_loading_based_on_current_work"
      - "validate_index_stays_under_token_limits"
    rollback_point: "restore_previous_index_format"
    success_criteria: ["index_optimized", "context_loading_improved", "token_limits_respected"]

migration_implementation:
  session_cleanup_strategy:
    immediate_fixes:
      - action: "stop_appending_to_index_carl"
        implementation: "modify_hooks_to_write_to_sessions_directory"
        files_affected: [".claude/hooks/session-start.sh", ".claude/hooks/session-end.sh"]
        
      - action: "clean_existing_index_carl"
        implementation: "extract_and_remove_duplicate_session_entries"
        backup_strategy: "create_index_carl_backup_before_cleaning"
        
      - action: "implement_session_rotation"
        implementation: "keep_only_last_N_sessions_in_active_files"
        configuration: "max_active_sessions: 10"
        archival: "compress_older_sessions_monthly"

  file_structure_transformation:
    directory_creation:
      new_structure: |
        .carl/
        ├── process.carl
        ├── requirements/
        │   ├── active/
        │   └── completed/
        ├── implementation/
        │   ├── active/
        │   └── completed/
        ├── architecture/
        │   ├── active/
        │   └── completed/
        ├── sessions/
        │   ├── 2025-07-28.session.carl
        │   └── recent.carl
        └── index.carl
        
    file_migration_mapping:
      legacy_to_new:
        - "specifications/*.md → requirements/active/*.intent.carl"
        - "session data from index.carl → sessions/*.session.carl"
        - "create new process.carl from project analysis"
        - "generate architecture/*.context.carl from code analysis"

  content_preservation:
    existing_content_handling:
      - "extract_all_requirements_from_existing_specifications"
      - "preserve_all_user_written_content_and_customizations"
      - "maintain_project_history_and_decision_context"
      - "convert_markdown_content_to_carl_format_intelligently"
      
    data_transformation:
      - "use_claude_code_for_intelligent_content_migration"
      - "preserve_intent_while_updating_structure"
      - "maintain_relationships_between_related_files"
      - "validate_migrated_content_for_accuracy"

migration_safety_measures:
  backup_strategy:
    automatic_backups:
      - "create_timestamped_backup_before_any_migration_step"
      - "backup_includes_all_carl_directories_and_claude_settings"
      - "compress_backups_to_minimize_storage_impact"
      - "maintain_recovery_instructions_with_each_backup"
      
    rollback_procedures:
      phase_1_rollback: "simple_file_restoration_from_backup"
      phase_2_rollback: "restore_index_carl_and_revert_hook_changes"
      phase_3_rollback: "full_directory_structure_restoration_required"
      phase_4_rollback: "may_require_carl_version_downgrade"

  validation_checkpoints:
    pre_migration_validation:
      - "verify_all_existing_carl_files_are_readable"
      - "confirm_backup_creation_successful"
      - "validate_project_is_in_clean_git_state"
      - "check_claude_code_availability_for_intelligent_migration"
      
    post_migration_validation:
      - "verify_all_content_migrated_successfully"
      - "test_all_carl_commands_work_with_new_structure"
      - "validate_session_tracking_no_longer_pollutes_index"
      - "confirm_ai_context_loading_functions_correctly"

user_experience_considerations:
  communication_strategy:
    pre_migration_notice:
      - "explain_benefits_of_migration_clearly"
      - "provide_realistic_timeline_and_expectations"
      - "offer_option_to_delay_migration_if_needed"
      - "document_what_will_change_from_user_perspective"
      
    during_migration_feedback:
      - "show_progress_indicators_for_each_phase"
      - "provide_detailed_logging_of_actions_taken"
      - "offer_pause_points_where_user_can_review"
      - "highlight_any_issues_that_require_user_input"
      
    post_migration_guidance:
      - "explain_new_file_structure_and_benefits"
      - "provide_updated_workflow_documentation"
      - "highlight_performance_improvements_achieved"
      - "offer_training_on_new_features_and_capabilities"

  workflow_preservation:
    familiar_commands:
      - "all_carl_commands_continue_to_work_identically"
      - "command_output_improved_but_usage_unchanged"
      - "existing_keyboard_shortcuts_and_habits_preserved"
      
    gradual_feature_introduction:
      - "new_capabilities_introduced_progressively"
      - "users_can_continue_existing_workflows_during_transition"
      - "advanced_features_opt_in_rather_than_forced"

carl_update_command_integration:
  command_enhancement:
    purpose: "handle_complex_multi_phase_migration_automatically"
    user_experience: "single_command_handles_entire_migration_safely"
    rollback_capability: "full_rollback_available_at_each_phase"
    
  update_command_workflow:
    phase_detection:
      - "analyze_current_carl_version_and_structure"
      - "determine_which_migration_phases_are_needed"
      - "assess_project_specific_migration_complexity"
      - "generate_custom_migration_plan_for_project"
      
    user_communication:
      - "explain_changes_that_will_be_made_clearly"
      - "provide_realistic_timeline_and_risk_assessment"
      - "offer_detailed_preview_of_new_structure"
      - "request_explicit_confirmation_before_proceeding"
      
    incremental_execution:
      - "execute_one_phase_at_a_time_with_validation"
      - "provide_progress_updates_and_success_confirmation"
      - "offer_pause_points_for_user_review_and_approval"
      - "automatically_validate_each_phase_before_continuing"
      
    intelligent_content_migration:
      - "use_claude_code_for_intelligent_content_transformation"
      - "preserve_all_user_customizations_and_content"
      - "maintain_relationships_between_migrated_files"
      - "validate_migrated_content_accuracy_and_completeness"
      
  update_command_safety_measures:
    comprehensive_backup:
      - "create_full_project_backup_before_starting"
      - "include_carl_directories_claude_settings_and_git_state"
      - "compress_and_timestamp_backup_for_easy_restoration"
      - "provide_clear_restoration_instructions"
      
    phase_validation:
      - "validate_each_phase_completion_before_proceeding"
      - "test_carl_commands_work_correctly_after_each_phase"
      - "verify_content_integrity_and_relationship_preservation"
      - "confirm_no_data_loss_or_corruption_occurred"
      
    rollback_procedures:
      - "provide_rollback_option_after_each_phase"
      - "maintain_rollback_capability_until_user_confirms_success"
      - "offer_selective_rollback_of_specific_phases_if_needed"
      - "ensure_project_remains_functional_throughout_process"

  user_experience_optimization:
    pre_update_preparation:
      - "recommend_git_commit_of_current_work_before_update"
      - "suggest_testing_current_carl_functionality_before_migration"
      - "provide_checklist_of_preparation_steps"
      - "offer_option_to_schedule_update_for_convenient_time"
      
    during_update_feedback:
      - "show_detailed_progress_indicators_for_each_phase"
      - "provide_real_time_logging_of_actions_being_taken"
      - "highlight_any_issues_that_require_user_input_or_decisions"
      - "offer_ability_to_pause_update_and_resume_later"
      
    post_update_validation:
      - "guide_user_through_testing_new_architecture_and_commands"
      - "provide_overview_of_changes_made_and_new_capabilities"
      - "offer_training_on_new_features_and_workflow_improvements"
      - "collect_feedback_on_migration_experience_for_improvement"

implementation_timeline:
  immediate_release_1_4_1:
    focus: "fix_session_pollution_critical_bug"
    changes: "minimal_changes_to_fix_index_carl_growth"
    risk: "very_low_risk_targeted_fix"
    update_command: "simple_session_cleanup_only"
    
  beta_release_1_5_0_beta:
    focus: "architecture_migration_with_extensive_testing"
    changes: "complete_file_structure_overhaul_with_beta_testing"
    risk: "moderate_risk_with_comprehensive_beta_validation"
    update_command: "full_multi_phase_migration_with_rollback"
    
  stable_release_1_5_0:
    focus: "stable_new_architecture_with_proven_migration"
    changes: "finalized_architecture_with_optimizations"
    risk: "low_risk_based_on_beta_feedback_and_fixes"
    update_command: "polished_migration_experience_with_intelligent_defaults"
    
  future_releases:
    focus: "optimize_and_enhance_new_architecture"
    changes: "performance_improvements_and_new_features"
    risk: "low_risk_incremental_improvements"
    update_command: "simple_incremental_updates_within_stable_architecture"

migration_success_criteria:
  technical_success:
    - "index_carl_never_exceeds_reasonable_size"
    - "all_existing_project_content_preserved"
    - "ai_context_loading_improved_or_maintained"
    - "no_loss_of_functionality_from_user_perspective"
    
  user_experience_success:
    - "migration_completes_without_user_intervention"
    - "users_notice_performance_improvements"
    - "documentation_clearly_explains_changes"
    - "rollback_option_available_if_issues_arise"

# Implementation Notes:
# - Prioritize session pollution fix as critical bug (1.4.1)
# - Full architecture migration can be separate major release (1.5.0)
# - Use Claude Code for intelligent content migration when available
# - Maintain backward compatibility during transition period
# - Provide clear communication and documentation throughout process