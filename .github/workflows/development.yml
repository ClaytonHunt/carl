name: Development Workflow

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'install.sh'
      - 'update-carl.sh'
      - '.carl/**'
      - '.claude/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'install.sh'
      - 'update-carl.sh'
      - '.carl/**'
      - '.claude/**'
      - '.github/workflows/**'

jobs:
  validate:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Validate shell scripts
        run: |
          echo "üîç Validating shell scripts"
          
          # Check if shellcheck is available
          if ! command -v shellcheck >/dev/null 2>&1; then
            echo "üì¶ Installing shellcheck..."
            sudo apt-get update && sudo apt-get install -y shellcheck
          fi
          
          # Validate install script
          echo "Checking install.sh..."
          shellcheck install.sh || exit 1
          
          echo "‚úÖ All shell scripts passed validation"

      - name: Test installation script
        run: |
          echo "üß™ Testing installation script..."
          
          # Create test directory
          TEST_DIR=$(mktemp -d)
          cd "$TEST_DIR"
          
          # Test basic installation
          bash "$GITHUB_WORKSPACE/install.sh" .
          
          # Verify CARL was installed
          if [ ! -d ".carl" ]; then
            echo "‚ùå CARL installation failed"
            exit 1
          fi
          
          if [ ! -f ".carl/config/carl-settings.json" ]; then
            echo "‚ùå CARL settings not created"
            exit 1
          fi
          
          echo "‚úÖ Installation script test passed"
          
          # Cleanup
          cd - && rm -rf "$TEST_DIR"

      - name: Validate CARL configuration
        run: |
          echo "üîß Validating CARL configuration files..."
          
          if [ -f ".carl/config/carl-settings.json" ]; then
            # Validate JSON syntax
            if ! python3 -m json.tool .carl/config/carl-settings.json >/dev/null; then
              echo "‚ùå Invalid JSON in carl-settings.json"
              exit 1
            fi
            echo "‚úÖ carl-settings.json is valid JSON"
          fi
          
          if [ -f ".carl/index.carl" ]; then
            echo "‚úÖ CARL index file exists"
          fi

      - name: Check for version consistency
        run: |
          echo "üîÑ Checking version consistency..."
          
          # Extract version from carl-settings.json if it exists
          if [ -f ".carl/config/carl-settings.json" ]; then
            SETTINGS_VERSION=$(grep '"carl_version"' .carl/config/carl-settings.json | cut -d'"' -f4)
            echo "Settings version: $SETTINGS_VERSION"
          fi
          
          # Extract version from index.carl if it exists  
          if [ -f ".carl/index.carl" ]; then
            INDEX_VERSION=$(grep '^project_version:' .carl/index.carl | cut -d'"' -f2)
            echo "Index version: $INDEX_VERSION"
          fi
          
          echo "‚úÖ Version check completed"

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run security scan
        run: |
          echo "üîí Running security scan on shell scripts..."
          
          # Check for common security issues
          echo "Scanning install.sh for security issues..."
          
          # Check for dangerous patterns
          if grep -n "eval\|exec\|system\|`" "install.sh"; then
            echo "‚ö†Ô∏è Warning: Found potentially dangerous commands in install.sh"
          fi
          
          # Check for hardcoded secrets (basic check)  
          if grep -iE "(password|secret|key|token).*=" "install.sh"; then
            echo "‚ö†Ô∏è Warning: Possible hardcoded secrets in install.sh"
          fi
          
          echo "‚úÖ Security scan completed"