name: Release CARL

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.7.1)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "version_number=${VERSION#v}" >> $GITHUB_OUTPUT

      - name: Validate src files exist
        run: |
          if [ ! -f "src/install.sh" ]; then
            echo "❌ src/install.sh not found"
            exit 1
          fi
          if [ ! -f "src/update-carl.sh" ]; then
            echo "❌ src/update-carl.sh not found"
            exit 1
          fi
          echo "✅ All required src files found"

      - name: Update version in src files
        run: |
          VERSION_NUMBER="${{ steps.version.outputs.version_number }}"
          echo "🔄 Updating version to $VERSION_NUMBER in src files..."
          
          # Update install.sh version
          if grep -q "CARL_VERSION=" src/install.sh; then
            sed -i "s/CARL_VERSION=.*/CARL_VERSION=\"$VERSION_NUMBER\"/" src/install.sh
          else
            # Add version if not present
            sed -i '/^#!/a CARL_VERSION="'$VERSION_NUMBER'"' src/install.sh
          fi
          
          # Update update-carl.sh version  
          if grep -q "# Version:" src/update-carl.sh; then
            sed -i "s/# Version:.*/# Version: $VERSION_NUMBER/" src/update-carl.sh
          fi

      - name: Commit version updates
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git diff --quiet; then
            echo "ℹ️ No version changes to commit"
          else
            git add src/
            git commit -m "Release ${{ steps.version.outputs.version }}: Update version numbers"
            git push origin HEAD:main
          fi

      - name: Generate changelog
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.version }}"
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD~1 2>/dev/null || echo "")
          
          echo "## 🚀 CARL $VERSION Release" > CHANGELOG.md
          echo "" >> CHANGELOG.md
          
          if [ -n "$PREVIOUS_TAG" ]; then
            echo "### Changes since $PREVIOUS_TAG" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            git log --pretty=format:"- %s (%h)" $PREVIOUS_TAG..HEAD >> CHANGELOG.md
          else
            echo "### Initial Release" >> CHANGELOG.md
            echo "" >> CHANGELOG.md
            echo "- Initial CARL release with installation and update scripts" >> CHANGELOG.md
          fi
          
          echo "" >> CHANGELOG.md
          echo "### 📦 Installation" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo '```bash' >> CHANGELOG.md
          echo "# Quick install in current directory" >> CHANGELOG.md
          echo "bash <(curl -s https://github.com/ClaytonHunt/carl/releases/latest/download/install.sh)" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "# Install in specific project" >> CHANGELOG.md
          echo "bash <(curl -s https://github.com/ClaytonHunt/carl/releases/latest/download/install.sh) /path/to/project" >> CHANGELOG.md
          echo '```' >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo "### 🔄 Update" >> CHANGELOG.md
          echo "" >> CHANGELOG.md
          echo '```bash' >> CHANGELOG.md
          echo "# Update existing CARL installation" >> CHANGELOG.md
          echo "/carl:update" >> CHANGELOG.md
          echo '```' >> CHANGELOG.md
          
          # Set output for release notes
          {
            echo 'changelog<<EOF'
            cat CHANGELOG.md
            echo EOF
          } >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.version }}
          name: "CARL ${{ steps.version.outputs.version }}"
          body: ${{ steps.changelog.outputs.changelog }}
          files: |
            src/install.sh
            src/update-carl.sh
          # These files will be available as:
          # - https://github.com/ClaytonHunt/carl/releases/latest/download/install.sh  
          # - https://github.com/ClaytonHunt/carl/releases/latest/download/update-carl.sh
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update repository topics
        run: |
          # Update repository with release info
          echo "✅ CARL ${{ steps.version.outputs.version }} released successfully!"
          echo "📦 Release files are now available at:"
          echo "   - https://github.com/ClaytonHunt/carl/releases/latest/download/install.sh"  
          echo "   - https://github.com/ClaytonHunt/carl/releases/latest/download/update-carl.sh"